----------------------------------------------------------------------
24-01-2024
----------
Access Modifier in java :
--------------------------
It is used to describe the accessibility level of the class as well as the member of the class.

In terms of accessibility, java software people has provided 4 access modifiers.

a) private  (Accessible within the same class only)
b) default  (Accessible within the same package only)
c) protected (Accessible from another package also but using inheritance)
d) public (No restriction accessible from everywhere)
   
private :
---------						
It is an access modifier and it is the most restrictive access modifier because 
the member declared as private can't be accessible from outside of the class.
In Java we can't declare an outer class as a private or protected. Generally 
we should declare the data member(variables) as private.

In java outer class can be declared as public, abstract, final and sealed 
(must have sub class) only.

default :-
----------
It is an access modifier which is less restrictive than private. It is such 
kind of access modifier whose physical existance is not avaialble that means when 
we don't specify any kind of access modifier before the class name, variable name 
or method name then by default it would be default.

As far as its accessibility is concerned, default members are accessible within the 
same folder(package) only.

protected :
------------
It is an access modifier which is less restrictive than default because the member 
declared as protected can be accessible 
from the outside of the package (folder) too but by using inheritance concept.

2 Files which are available in 2 different packages :
------------------------------------------------------
Test.java
---------
package com.ravi.constructor;

public class Test 
{
  protected int x = 500;
}


ELC.java
---------
package com.ravi.inheritance;

import com.ravi.constructor.Test;

public class ELC extends Test
{
	public static void main(String[] args) 
	{
		ELC e = new ELC();
		System.out.println(e.x);
	}

}
----------------------------------------------------------------------------
public :
-------
It is an access modifier which does not contain any kind of restriction that is 
the reason the member declared as public can be accessible from everywhere without 
any restriction.

According to Object Oriented rule we should declare the classes and methods as public 
where as variables must be declared as private or protected according to the requirement.
----------------------------------------------------------------------------
System.out.println() using HAS-A Relation
------------------------------------------

class Test
{
  static String out = "India";
}

Test.out.length();

Note : length() is a predefined method of String class
----------------------------------------------------------------------------
class System
{
   static PrintStream out;  //HAS-A relation
}

System.out.println();

Note :- println() is a predefined method of PrintStream class
---------------------------------------------------------------------------
HAS-A Relation
