----------------------------------------------------------------------
29-12-2023
----------
Finding the Area of Rectangle :
-------------------------------
2 Files :
--------
Rectangle.java
---------------
package com.ravi.pack5;

//BLC
public class Rectangle 
{
  public static double getArea(double height, double width)
  {
	  double area = height*width;
	  return area;
  }
}

Test5.java
----------
package com.ravi.pack5;

public class Test5 
{
	public static void main(String[] args)
	{
	 double areaOfRect = Rectangle.getArea(2.3, 8.9);
	 System.out.println("Area of Rectangle is :"+areaOfRect);
	}
}
--------------------------------------------------------------------------
//Program to verify number is even or odd

2 files :
---------
EvenOrOdd.java
--------------
package com.ravi.pack6;

//BLC
public class EvenOrOdd 
{
   public static boolean isEven(int num)
    {
        return (num % 2 == 0);
    }
}


Test6.java
----------
package com.ravi.pack6;

//ELC
public class Test6 
{
	public static void main(String[] args) 
	{
	 boolean val =   EvenOrOdd.isEven(4);	
	 System.out.println("4 is even :"+val);
	 
	 val =   EvenOrOdd.isEven(5);	
	 System.out.println("5 is even :"+val);
	}
}
--------------------------------------------------------------------------
How to provide userdefined format for decimal numbers ?
--------------------------------------------------------
java.text package has provided a predefined class called DecimalFormat
which is accepting format as a String parameter as shown below.

  DecimalFormat df = new DecimalFormat("00.00"); //"00.00" is the format

Now this DecimalFormat class contains non static method format() which accepts double as a parameter.

  DecimalFormat df = new DecimalFormat("00.00");
                df.format(double value);

2 Files :
----------
Circle.java
------------
//Area of Circle
package com.ravi.pack7;
public class Circle 
{
  public static String getArea(double rad)
  {
	if(rad == 0 || rad<0)
	{
		return ""+(-1);
	}
	else
	{
	  final double PI = 3.14;
	  double area = PI * rad * rad;
	  return ""+area;
	}
	  
  }
}


Test7.java
----------
package com.ravi.pack7;

import java.text.DecimalFormat;
import java.util.Scanner;

public class Test7 
{
	public static void main(String[] args) 
	{   
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter the radius :");
		int rad = sc.nextInt();
		
		String area = Circle.getArea(rad);
		
		
		//Convert the String into double
		double areaOfCircle = Double.parseDouble(area);
		
		
		DecimalFormat df = new DecimalFormat("00.00");		
		System.out.println("Area of Circle is :"+df.format(areaOfCircle));
       
	    sc.close();
	}
}
-------------------------------------------------------------------------
Program that describes method return type is String

2 Files :
---------
Student.java
------------
package com.ravi.pack8;

//BLC
public class Student 
{
 public static String getStudentDetails(int roll, String name, double fees)
  {
	//[Student name is : Ravi, roll is : 101, fees is :1200.90]
	 
	return "[Student name is :"+name+", roll is :"+roll+", fees is :"+fees+"]";                                   
		
  }   
}

Test8.java
----------
package com.ravi.pack8;

public class Test8 
{
	public static void main(String[] args)
	{
		String details = Student.getStudentDetails(111, "Raj", 18000.90);
		System.out.println("Student Details are :"+details);
	}

}
--------------------------------------------------------------------------
Printing the table in proper format :

2 Files :
----------
Table.java
----------
package com.ravi.pack9;

//BLC
public class Table 
{
  public static void printTable(int num) //9
  {
	  for(int i=1; i<=10; i++)
	  {
		 System.out.println(num+" X "+i+" = "+(num*i));
	  }
	  System.out.println(".................");
  }
}



Test9.java
----------
package com.ravi.pack9;

//ELC
public class Test9 
{
	public static void main(String[] args) 
	{		
		for(int i=1; i<=10; i++)
		{
			Table.printTable(i);
		}
	}

}
--------------------------------------------------------------------------
Types of variable in Java :
---------------------------
In Java based on data type, we have only 2 types of variables 

 1) Primitive type (byte, short, int , long and so on)

 Example :- int x = 10; [Primitive type will always hold the value]

 2) Non-Primitive type OR Reference Type

 Example :- Employee e1 = new Employee(); [Reference variable will hold the 
                                                                   address]
            //Here e1 is a reference variable


Now further based on the Declaration position further variable is divided into 4 types :

1) Class variable OR Static field
2) Instance variable OR Non-static field
3) Local/Stack/Automatic/Temporary variable
4) Parameter Varaiable.


class A
{
   int x = 10; //primitive + instance variable
   static int y = 20; primitive + class variable

   public void accept(int z)  // z is parameter variable
   {
       int a = 40; //local variable
   }
}


package com.ravi.co_variant;

import java.util.Scanner;

public class Employee 
{
    Employee e1 = new Employee(); //Instance + ref
    static Scanner sc = new Scanner(System.in); //class Variable + ref
    
	public static void main(String[] args) 
	{
		Employee e2 = new Employee(); //Local + Ref
		
		accept(e2);
	}

	public static void accept(Employee e3) //Parameter + ref
	{
		
	}
}
--------------------------------------------------------------------------