08-02-2024
----------
What is method chaining ?
--------------------------
By using this concept we can call n number of method in a single statement.

The next method call always depends upon current method return type.

The final return type of the method will depend upon last method call.
--------------------------------------------------------------
public class MethodChainingDemo {

	public static void main(String[] args) 
	{
		String str = "india";
	    int len =	str.concat(" is great").toUpperCase().length();
	    System.out.println(len);
	    
	    String str1 = "india";
	    char ch = str1.concat(" is great").toUpperCase().charAt(1);
	    System.out.println(ch);
	}

}
----------------------------------------------------------------
public native final java.lang.Class getClass() :
-------------------------------------------------
It is a predefined method of Object class.

This method returns the runtime class of the object, the return type of this method 
is java.lang.Class.

This method will provide class keyword + Fully Qualified Name (package name + class name)

This getClass() method return type is java.lang.Class so further we can apply any 
other method of java.lang.Class class method.
---------------------------------------------------------------
2 files (Both are in different package)
-----------------------------------------
Demo.java (com.nit.reuse)
-------------------------
package com.nit.reuse;

public class Demo {

}

GetClassDemo1.java
-------------------

package com.ravi.object_class;

import com.nit.reuse.Demo;

public class GetClassDemo1 
{
	public static void main(String[] args) 
	{
		Demo d = new Demo();
		System.out.println(d.getClass());
	}
}
---------------------------------------------------------------
The following program will provide Fully Qualified name of the class.

String fullyQualifiedName = getClass().getName();

2 files :
----------
Demo.java(com.nit.reuse)

package com.nit.reuse;

public class Demo {

}

GetClassDemo2.java
-------------------
package com.ravi.object_class;

import com.nit.reuse.Demo;

public class GetClassDemo2 
{
  public static void main(String[] args) 
  {
	Demo d1 = new Demo();
	String name = d1.getClass().getName();
	System.out.println(name);
  }
}
---------------------------------------------------------------
public native int hashCode() :-
-----------------------------
It is a predefined method of Object class.

Every Object contains a unique number generated by JVM at the time of Object 
creation is called hashCode.

we can find out the hashCode value of an Object by using hashCode() method of 
Object class, return type of this method is int.
----------------------------------------------------------------
package com.ravi.object_class;

class Test
{
	
}
public class HashCodeDemo1 
{
	public static void main(String[] args)
	{
		Test t1 = new Test();
		Test t2 = t1;
		System.out.println(t1.hashCode()+" : "+t2.hashCode());
		
		System.out.println("...............");
		
		Test t3 = new Test();
		Test t4 = new Test();
		System.out.println(t3.hashCode()+" : "+t4.hashCode());
	}

}
---------------------------------------------------------------