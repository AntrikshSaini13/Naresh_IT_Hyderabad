----------------------------------------------------------------
12-04-2024
-----------
//public StringBuffer insert(int position, String str)
//Based on the index position we can insert the String
public class Test27
{
public static void main(String args[])
	{	
		StringBuffer sb1=new StringBuffer("Hello");
		sb1.insert(1,"JSE");
		System.out.println(sb1);  //HJSEello

		StringBuilder sb2=new StringBuilder("Hello");
		sb2.insert(1,"JEE");
		System.out.println(sb2); //HJEEello 
	}
}
----------------------------------------------------------------
//public AbstractStringBuilder reverse()
//Used to reverse the given String
class Test28
{
	public static void main(String[] args) 
	{
		StringBuffer sb1=new StringBuffer("Hello");
		sb1.reverse();
		System.out.println(sb1); //olleH 

		StringBuilder sb2=new StringBuilder("Java");
		sb2.reverse();
		System.out.println(sb2);  //avaJ		
		}
}
----------------------------------------------------------------
//Program to demonstrate the performance of StringBuffer and StringBuilder classes.
package com.ravi.performance;

public class PerformanceComparison 
{
	public static void main(String[] args) 
	{
		long startTime = System.currentTimeMillis();  
		
		StringBuilder sb1 = new StringBuilder("Java");
		
		for(int i=1; i<=1000000; i++)
		{
			sb1.append(" Technology");
		}

		long endTime = System.currentTimeMillis();  
		
		System.out.println("Total Time Taken by StringBuilder class is :"+(endTime - startTime));
		
		System.out.println("...............................");
		
         startTime = System.currentTimeMillis();  
		
		StringBuffer sb2 = new StringBuffer("Java");
		
		for(int i=1; i<=1000000; i++)
		{
			sb2.append(" Technology");
		}

		endTime = System.currentTimeMillis();  
		
		System.out.println("Total Time Taken by StringBuffer class is :"+(endTime - startTime));

	}

}

Note :- From the above program, It is clear that StringBuilder is more better than StringBuffer.

Note :- System is a predefined class available in java.lang package and it contains a predefined 
static method currentTimeMillis() , the return type of this method is long, actually it returns 
the current time of the system in ms.

   public static long currentTimeMillis()
----------------------------------------------------------------
String class Constructor :
--------------------------
String class is containing 15 constructors (some are deprecated) the commonly used constructors are :

1) String s1 = new String();

2) String s2 = new String("India");

3) String s3 = new String(byte []b);

4) String s4 = new String(char []b);

5) String s5 = new String(StringBuffer sb);

6) String s6 = new String(StringBuilder sb);
-----------------------------------------------------------------
//Program to reverse a String

//String class Constructor
//WAP in java to reverse a String
import java.util.Scanner;
public class Test1
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a String to reverse :");
		String str = sc.nextLine();  
		
        for(int i=str.length()-1; i>=0; i--)  //i =0 
		{
			 System.out.print(str.charAt(i)); 
		}	
        System.out.println();
	}
}
----------------------------------------------------------------
//WAP in java to reverse a String
import java.util.Scanner;
public class Test2 
{
    public static void main(String[] args) 
	{
        Scanner sc = new Scanner(System.in);
		System.out.println("Enter a String to reverse :");
		String input = sc.nextLine();

        StringBuilder sb = new StringBuilder();
        sb.append(input);
        System.out.println(sb.reverse());
    }
}
----------------------------------------------------------------
//Program to find out the duplicate characters in String as well as count it in a String
import java.util.*;
public class Test3 
{
public static void main(String ...x)
{
  Scanner sc = new Scanner(System.in);
  System.out.println("Enter a String :");
  String str = sc.nextLine(); //ravishankar

  int count = 0;
  char[] arr = str.toCharArray();  //{'r','a'....} 

  System.out.println("Duplicate Characters are:");

  for (int i = 0; i < str.length(); i++)     //i=1   length = 11
  {
    for (int j = i + 1; j < str.length(); j++) //j = 2  length = 11
	{
      if (arr[i] == arr[j])   //
		  {
             System.out.println(arr[j]);  //r  a  a
             count++;                     //count = 3
             break;
          }
     }
  }
   System.out.println("Total duplicate characters are :"+count);
 }
}
----------------------------------------------------------------
//Remove a specified character from the given String  
import java.util.*;
public class Test4    
{
  public static void main(String[] args) 
  {
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter a String :");
    String str = sc.nextLine();  //ravi

	System.out.println("Enter a character you want to remove :");
    char removeChar = sc.next().charAt(0); //v

    StringBuilder result = new StringBuilder(); //rai

    for (char c : str.toCharArray()) // {'r', 'a', 'v', 'i'}
		{
          if (c != removeChar)    //i != v
		  {
             result.append(c);   
          }
       }
    System.out.println(result);
  }
}
----------------------------------------------------------------
//Program to check whether a String contains vowels or not?
import java.util.*;
public class Test5
{
  public static void main(String[] args) 
  {
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter a String :");
    String str = sc.nextLine();             //SKY  - sky

    boolean containsVowel = false;

    for (char c : str.toLowerCase().toCharArray())   //{'s','k'..} 
	{
      if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') 
	  {
        containsVowel = true;
        break;
      }
    }

    if (containsVowel) 
	{
      System.out.println("The string contains a vowel.");
    } 
	else 
	{
      System.out.println("The string does not contain a vowel.");
    }
  }
}
----------------------------------------------------------------
//How to sort a String data
import java.util.Scanner;
public class Test6
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter a String :");
    String str = sc.nextLine();  //mango

    char[] chars = str.toCharArray();    

    for (int i = 0; i < chars.length; i++)   
	{
      for (int j = i + 1; j < chars.length; j++)  
	  {
        if (chars[i] > chars[j])   
		{
          char temp = chars[i];
          chars[i] = chars[j];
          chars[j] = temp;
        }
      }
    }
    System.out.println(new String(chars));
  }
}
---------------------------------------------------------------
//count the occurrence of a given character in the existing String
import java.util.*;

public class Test7
{
public static void main(String[] args) 
{
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter a String :");
    String str = sc.nextLine().toLowerCase();; //apple    

	System.out.println("Enter a character :");
    char target = sc.next().toLowerCase().charAt(0); //p

    int count = 0;

    for (int i = 0; i < str.length(); i++) // i = 0     length = 5
	{
            if (str.charAt(i) == target)   //e == p
			{
                count++;  //2
            }
     }
        System.out.println("The character '" + target + "' appears " + count + " times in the string '" + str + "'");
    }
}
---------------------------------------------------------------
Character class in java :
------------------------
It is a predefined Wrapper class available in java.lang package. It contains 
the following static methods to check whether a chracter is digit or uppercase or 
lowecase or not?

public static boolean isDigit(char ch);  //ravi1ui

public static boolean isUpperCase(char ch);

public static boolean isLowerCase(char ch);
---------------------------------------------------------------
//Program to find out a String contains digit or not
//public static boolean isDigit(char ch) 

import java.util.*;
public class Test8
{
public static void main(String[] args) 
{
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter a String :");
    String str = sc.nextLine();

    boolean containsDigits = false;

    for (int i = 0; i < str.length(); i++)   ///Ravi123
	{
      if (Character.isDigit(str.charAt(i))) 
	  {
        containsDigits = true;
        break;
      }
    }

    if (containsDigits) 
	{
      System.out.println("The string contains digits.");
    } 
	else 
    {
      System.out.println("The string does not contain digits.");
    }
  }
}
----------------------------------------------------------------
//program to count capital and small letter from the given String
//public static boolean isUpperCase(char ch)
//public static boolean isLowerCase(char ch)

import java.util.Scanner;
public class Test9
{
public static void main(String[] args) 
{
  Scanner sc = new Scanner(System.in);
  System.out.print("Enter a string: ");
  String str = sc.nextLine();  //RaVi

  int upperCase = 0, lowerCase = 0;    

    for (int i = 0; i < str.length(); i++) 
	{
      char ch = str.charAt(i);    
      
	  if (Character.isUpperCase(ch)) 
	  {
        upperCase++;
      } 
	  else if (Character.isLowerCase(ch)) 
	  {
        lowerCase++;  
       }
    }    
    System.out.println("Uppercase letters: " + upperCase);
    System.out.println("Lowercase letters: " + lowerCase);
  }
}
----------------------------------------------------------------
//Program to count the consonants and vowels in the given String
import java.util.Scanner;
public class Test10
{
public static void main(String[] args) 
{
     Scanner sc = new Scanner(System.in);
     System.out.print("Enter a string: ");
     String str = sc.nextLine();

    int vowels = 0, consonants = 0;

    for (int i = 0; i < str.length(); i++) 
	{
      char c = str.charAt(i);  

      if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||
          c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') 
	  {
        vowels++;
      } 
	  else  
	  {
        consonants++;
      }
    }
    System.out.println("Vowels: " + vowels);
    System.out.println("Consonants: " + consonants);
  }
}
----------------------------------------------------------------
//check a String  is palindrome or not  
import java.util.Scanner;
public class Test11
{
public static void main(String[] args) 
{
  Scanner sc = new Scanner(System.in);
  System.out.print("Enter a string: ");
  String str = sc.nextLine();            // madam

    boolean isPalindrome = true;                    

    for(int i = 0; i < str.length() / 2;   i++) //i=1   i<2  i++    
	{
        if (str.charAt(i) != str.charAt(str.length() - i - 1)) //a != a
		{
           isPalindrome = false;  
           break;
        }
    }

    if (isPalindrome) 
	{
      System.out.println(str + " is a palindrome.");
    } 
	else 
	{
      System.out.println(str + " is not a palindrome.");
    }
  }
}
 ------------------------------------------------------------------
